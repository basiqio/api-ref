openapi: 3.0.1
info:
  title: Identity
  description: All included utility endpoints for Basiq partners
  version: 3.0.0
servers:
  - url: https://au-api.basiq.io/
paths:
  /users/{userId}/identities:
    get:
      tags:
      - Identities
      summary: Retrieve identities
      description: Returns a list with a data property that contains an array of user
        identities. Each entry in the array is a separate object. If no data is returned,
        the resulting array will be empty.
      operationId: getUserIdentities
      parameters:
      - name: userId
        in: path
        description: User identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Returns list of identities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitiesGetResponseResource'
        400:
          description: Returns error that server cannot or will not process the request
            due to something that is perceived to be a client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
              examples:
                    Bad Request:
                     value:
                      type: list
                      correlationId: ac5ah5i
                      data:
                        - type: error
                          title: Parameter not valid.
                          code: parameter-not-valid
                          detail: ID value is not valid.
                          source:
                            parameter: id
                    Invalid Filters:
                      value:
                        type: list
                        correlationId: ac5ah55
                        data:
                          - type: error
                            code: parameter-not-valid
                            title: Parameter value is not valid
                            detail: The provided filter parameter is in invalid format or unsupported
                            source:
                              parameter: filter
        403:
          description: Error that access is forbidden and tied to the application
            logic, such as insufficient rights to a resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenAccessError'
        500:
          description: Returns error response code indicates that the server encountered
            an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
      - services_token: []
  /users/{userId}/identities/{identityId}:
    get:
      tags:
      - Identities
      summary: Retrieve an identity
      description: Returns a specific identity object.
      operationId: getUserIdentity
      parameters:
      - name: userId
        in: path
        description: User identifier.
        required: true
        schema:
          type: string
      - name: identityId
        in: path
        description: Identity identifier.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Returns identity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityData'
        400:
          description: Returns error that server cannot or will not process the request
            due to something that is perceived to be a client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        403:
          description: Error that access is forbidden and tied to the application
            logic, such as insufficient rights to a resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenAccessError'
        404:
          description: Returns error indicating that server can't find requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Returns error response code indicates that the server encountered
            an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      security:
      - services_token: []
components:
  schemas:
    AccountClass:
      required:
        - type
        - product
      type: object
      properties:
        type:
          type: string
          description: Account type
          example: savings
        product:
          type: string
          description: Product name.
          example: saver
    AccountsContainer:
      required:
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Type always "list".
          example: list
        data:
          type: array
          description: Accounts details
          items:
            $ref: '#/components/schemas/AccountsData'
    AccountsData:
      required:
        - accountNo
        - availableFunds
        - balance
        - class
        - currency
        - id
        - lastUpdated
        - links
        - name
        - status
        - type
      type: object
      properties:
        type:
          type: string
          description: Type always "account".
          example: account
        id:
          type: string
          description: Account identification.
          example: 319ae910
        name:
          type: string
          description: Account name.
          example: Business account
        currency:
          type: string
          description: Currency
          example: AUD
        class:
          $ref: '#/components/schemas/AccountClass'
        accountNo:
          type: string
          description: Account number
          example: '105148119695'
        availableFunds:
          type: string
          description: Account available funds, nullable.
          nullable: true
          example: '200.54'
        balance:
          type: string
          description: Account balance, nullable.
          nullable: true
          example: '100.12'
        lastUpdated:
          type: string
          description: Account last updated date and time.
          example: '2017-09-28T11:15:09.756Z'
        status:
          type: string
          description: Account status.
          example: available
          enum:
            - available
            - unavailable
        links:
          $ref: '#/components/schemas/ConnectionAccountLinks'
    ConnectionAccountLinks:
      required:
        - self
        - transactions
      type: object
      properties:
        transactions:
          type: string
          description: transactions link to the transactions associated with this account
          example: >-
            https://au-api.basiq.io/users/ea3a81/transactions?filter=account.id.eq('s55bf3')
        self:
          type: string
          description: self link to the requested account
          example: https://au-api.basiq.io/users/cd6fbd92/accounts/319ae910
    AuthLinksResponseResource:
      required:
      - expiresAt
      - id
      - mobile
      - type
      - userId
      type: object
      properties:
        expiresAt:
          type: string
          description: The date time of auth link expiry.
          example: 2019-11-21T04:08:50Z
        id:
          type: string
          description: Uniquely identifies the auth link.
          example: 63448be4
        links:
          $ref: '#/components/schemas/AuthLinkLinks'
        mobile:
          type: string
          description: A user's mobile phone, used as for authentication.
          example: +61410000000
        type:
          type: string
          description: Type of the response, always "auth_link".
          example: auth_link
        userId:
          type: string
          description: A string that uniquely identifies the user.
          example: ec4ea48d
    GoneError:
      required:
      - correlationId
      - data
      - type
      type: object
      properties:
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
            - code
            - type
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code, expressed as a string
                  value.
                example: resource-no-longer-available
                enum:
                - resource-no-longer-available
              detail:
                type: string
                description: Human-readable explanation specific to this occurrence
                  of the problem.
              title:
                type: string
                description: Title of the error
              type:
                type: string
                description: Type of the response, always "error"
                example: error
        type:
          type: string
          description: Always "list".
          example: list
    BadRequestError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - type
            type: object
            properties:
              type:
                type: string
                description: Type of the response, always "error"
                example: error
              title:
                type: string
                description: Title of the error
                example: Parameter not valid.
              code:
                type: string
                description: Application-specific error code, expressed as a string value.
                example: parameter-not-valid
                enum:
                  - parameter-not-supplied
                  - parameter-not-valid
                  - unsupported-accept
                  - invalid-content
                  - institution-not-supported
                  - invalid-credentials
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: ID value is not valid.
              source:
                $ref: '#/components/schemas/Source'
    AuthLinkLinks:
      required:
      - public
      - self
      type: object
      properties:
        public:
          type: string
          description: Public URL of auth link.
          example: https://connect.basiq.io/63448be4
        self:
          type: string
          description: URL of the resource
          example: /users/ec4ea48d/auth_link
    AuthLinksPostResponseResource:
      required:
      - expiresAt
      - mobile
      - type
      - userId
      type: object
      properties:
        expiresAt:
          type: string
          description: The date time of auth link expiry.
          example: 2019-11-21T04:08:50Z
        links:
          $ref: '#/components/schemas/AuthLinkLinks'
        mobile:
          type: string
          description: A user's mobile phone, used as for authentication.
          example: +61410000000
        type:
          type: string
          description: Type of the response, always "auth_link".
          example: auth_link
        userId:
          type: string
          description: A string that uniquely identifies the user.
          example: ec4ea48d

    ConnectionGetResponseResource:
      title: ConnectionGetResponseResource
      required:
        - createdDate
        - method
        - id
        - institution
        - links
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "connection".
          example: connection
        id:
          type: string
          description: A string that uniquely identifies the user connection.
          example: '61723'
        method:
          type: string
          description: A string that uniquely identifies the user connections either it is web or openbanking
          example: 'web'
        createdDate:
          type: string
          description: Created date of the connection, available only for SERVER_SCOPE.
          example: '2019-07-29T07:34:09Z'
        lastUsed:
          type: string
          description: >-
            UTC Date and Time of when the connection was last used, in RFC 3339
            format, available only for SERVER_SCOPE.
          example: '2020-06-22T11:15:09Z'
        accounts:
          $ref: '#/components/schemas/AccountsContainer'
        institution:
          $ref: '#/components/schemas/ConnectionInstitution'
        profile:
          $ref: '#/components/schemas/ConnectionProfile'
        status:
          type: string
          description: Indicates the connection status, available only for SERVER_SCOPE.
          example: active
          enum:
            - active
            - pending
            - invalid
        links:
          $ref: '#/components/schemas/GetConnectionLinks'
      description: Object containing details for connection post.
    ConnectionInstitution:
      title: ConnectionInstitution
      required:
        - id
        - links
        - type
      type: object
      properties:
        id:
          type: string
          description: Institution id
          example: AU00000
        links:
          $ref: '#/components/schemas/ResourceLink'
        type:
          type: string
          description: Always "institution".
          example: institution
      description: Institution details.
    ConnectionProfile:
      required:
        - emailAddresses
        - firstName
        - fullName
        - lastName
        - middleName
        - phoneNumbers
        - physicalAddresses
      type: object
      properties:
        emailAddresses:
          type: array
          description: User email address
          example:
            - gavin@hooli.com
          items:
            type: string
        firstName:
          type: string
          description: User first name
          example: Gavin
        fullName:
          type: string
          description: User full name
          example: Gavin Belson
        lastName:
          type: string
          description: User last name
          example: Belson
        middleName:
          type: string
          description: User middle name
        phoneNumbers:
          type: array
          description: User phone number
          example:
            - XXXX 888 991
          items:
            type: string
        physicalAddresses:
          type: array
          description: Physical user addresses
          items:
            $ref: '#/components/schemas/PhysicalAddresses'
    ConnectionResponseResource:
      title: ConnectionResponseResource
      required:
        - id
        - links
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "job".
          example: job
        id:
          type: string
          description: Job identification.
          example: '29523951'
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: Object containing details for connection post.
    IdentitiesGetResponseResource:
      title: IdentitiesGetResponseResource
      required:
      - count
      - data
      - type
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IdentityData'
        type:
          type: string
          description: Type, always "list".
          example: list
        count:
          type: integer
          description: Count of the identities in the response.
          format: int64
          example: 100
      description: Object containing details for identities.
    IdentityData:
      required:
      - created
      - id
      - links
      - type
      - updated
      type: object
      properties:
        type:
          type: string
          description: Type, always "identity".
          example: identity
        id:
          type: string
          description: Identity identification.
          example: "61723"
        created:
          type: string
          description: Created date of the identity.
          example: 2019-07-29T07:34:09Z
        updated:
          type: string
          description: Created date of the identity.
          example: 2019-07-29T07:34:09Z
        links:
          $ref: '#/components/schemas/IdentityLinks'
        source:
          type: string
          description: Data source.
          example: web
        fullName:
          type: string
          description: FullName of the identity owner.
        firstName:
          type: string
          description: FirstName of the identity owner.
        lastName:
          type: string
          description: LastName of the identity owner.
        middleName:
          type: string
          description: MiddleName of the identity owner.
        title:
          type: string
          description: Title is the prefix to the name of the identity owner.
        DOB:
          type: string
          description: Date of birth of the identity owner.
        occupationCode:
          type: string
          description: Code relating to the occupation held by the identity owner.
        occupationCodeVersion:
          type: string
          description: Occupation Code Version.
        phoneNumbers:
          type: array
          description: List of phone numbers of the identity owner.
          items:
            type: string
        emails:
          type: array
          description: List of email addresses of the identity owner.
          items:
            type: string
        physicalAddresses:
          type: array
          description: List of physical addresses of the identity owner.
          items:
            $ref: '#/components/schemas/PhysicalAddressData'
        organisation:
          type: object
          properties:
            agentFirstName:
              type: string
              description: Agent first name.
            agentLastName:
              type: string
              description: Agent last name.
            agentRole:
              type: string
              description: Agent role.
            businessName:
              type: string
              description: Business name.
            legalName:
              type: string
              description: Legal name.
            shortName:
              type: string
              description: Short name.
            abn:
              type: string
              description: Australian Business Number.
            acn:
              type: string
              description: Australian Company Number.
            isACNCRegistered:
              type: boolean
              description: Indicates whether is Australian Company Number registered.
            industryCode:
              type: string
              description: Industry Code.
            industryCodeVersion:
              type: string
              description: Industry Code Version.
            organisationType:
              type: string
              description: Organisation Type.
            registeredCountry:
              type: string
              description: Registered Country.
          description: Organisation data.
    ConnectionsData:
      required:
        - createdDate
        - id
        - method
        - institution
        - links
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "connection".
          example: connection
        id:
          type: string
          description: Connection identification.
          example: '61723'
        method:
          type: string
          description: method identification.
          example: 'openbanking'
        status:
          type: string
          description: Connection status, available only for SERVER_SCOPE.
          example: active
          enum:
            - active
            - pending
            - invalid
        createdDate:
          type: string
          description: Created date of the connection, available only for SERVER_SCOPE.
          example: '2019-07-29T07:34:09Z'
        lastUsed:
          type: string
          description: Connection last used date, available only for SERVER_SCOPE.
          example: '2020-06-22T11:15:09Z'
        institution:
          $ref: '#/components/schemas/ConnectionInstitution'
        links:
          $ref: '#/components/schemas/GetConnectionsLinks'
    PhysicalAddressData:
      type: object
      properties:
        type:
          type: string
          description: Physical Address Type.
        addressLine1:
          type: string
          description: AddressLine1.
        addressLine2:
          type: string
          description: AddressLine2.
        addressLine3:
          type: string
          description: AddressLine3.
        postcode:
          type: string
          description: Postcode.
        city:
          type: string
          description: City.
        state:
          type: string
          description: State.
        country:
          type: string
          description: Country.
        countryCode:
          type: string
          description: Country Code.
        formattedAddress:
          type: string
          description: Formatted Address.
    IdentityLinks:
      required:
      - job
      - self
      type: object
      properties:
        self:
          type: string
          description: Self link to the requested identity
          example: https://au-api.basiq.io/users/cd6fbd92/identities/ea3a81
        job:
          type: string
          description: Link to the job associated with this identity
          example: https://au-api.basiq.io/users/ea3a81/connection/s55bf3
    EventsData:
      required:
        - createdDate
        - id
        - links
        - type
        - entity
        - userId
        - dataRef
        - data
        - eventType
      type: object
      properties:
        type:
          type: string
          description: Type, always "event".
          example: event
        id:
          type: string
          description: Event identification.
          example: '61723'
        createdDate:
          type: string
          description: Date the event was created.
          example: '2019-07-29T07:34:09Z'
        entity:
          type: string
          description: The entity associated with the event that has occurred
          example: consent
          enum:
            - consent
            - connection
        eventType:
          type: string
          description: The type of event that has occurred
          example: revoked
          enum:
            - revoked
            - expired
            - updated
            - created
            - archived
            - deleted
        userId:
          type: string
          description: The identifier of the user the event belongs to.
          example: 266f5849-6ef6-4aae-accf-386470d0598e
        dataRef:
          type: string
          description: URL to the data source the event occurred.
          example: https://au-api.basiq.io/users/266f5849-6ef6-4aae-accf-386470d0598e
        data:
          type: string
          description: The data associated with the event that has been created.
          example:
            - email: max@hooli.com
              id: 266f5849-6ef6-4aae-accf-386470d0598e
              links:
                self: >-
                  https://au-api.basiq.io/users/266f5849-6ef6-4aae-accf-386470d0598e
              mobile: +614xxxxxxxx
              type: user
        links:
          example:
            - self: >-
                https://au-api.basiq.io/events/545ae104289e71bd3da34a063aaf49a5fa17ab6b8e0cab4bc56e019b7cc409e0
    Connector:
      required:
        - authorization
        - id
        - institution
        - method
        - scopes
        - stage
        - stats
        - status
        - type
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/ConnectorAuthorization'
        id:
          maxLength: 7
          minLength: 7
          pattern: ^[A-Z]{2}[0-9]{5}$
          type: string
          description: Institution ID
          example: AU00000
        institution:
          $ref: '#/components/schemas/ConnectorInstitutionResource'
        links:
          $ref: '#/components/schemas/ResourceLinks'
        method:
          type: string
          description: Current Connector method
          example: web
        scopes:
          type: array
          description: Connector scopes array
          items:
            type: string
        stage:
          type: string
          description: Current Connector stage
          example: beta
        stats:
          $ref: '#/components/schemas/InstitutionPerformanceStats'
        status:
          $ref: '#/components/schemas/FeatureCondition'
        type:
          type: string
          description: |-
            Resource type identifier. It is always "connector" for this model.
            connector ConnectorEntityType
          example: connector
          enum:
            - connector
      description: Connector contains connector data.
    ConnectorAuthorization:
      required:
        - type
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/ConnectorAuthorizationMeta'
        type:
          type: string
          description: >-
            Authorization type identifier

            user AuthorizationUser  AuthorizationUser "User" authorization type
            identifier

            token AuthorizationToken AuthorizationToken "Token" authorization
            type identifier

            other AuthorizationOther  AuthorizationOther "Other" authorization
            type identifier

            user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa"
            authorization type identifier

            user-mfa-intermittent AuthorizationUserMfaIntermittent
            AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization
            type identifier
          example: user
          enum:
            - user
            - token
            - other
            - user-mfa
            - user-mfa-intermittent
          x-go-enum-desc: >-
            user AuthorizationUser  AuthorizationUser "User" authorization type
            identifier

            token AuthorizationToken AuthorizationToken "Token" authorization
            type identifier

            other AuthorizationOther  AuthorizationOther "Other" authorization
            type identifier

            user-mfa AuthorizationUserMfa  AuthorizationUserMfa "UserMfa"
            authorization type identifier

            user-mfa-intermittent AuthorizationUserMfaIntermittent
            AuthorizationUserMfaIntermittent "UserMfaIntermittent" authorization
            type identifier
          x-go-name: Type
    FeatureCondition:
      type: string
      description: FeatureCondition type that describes an feature status for institution
    InstitutionPerformanceStats:
      type: object
      properties:
        averageDurationMs:
          type: object
          properties:
            retrieveAccounts:
              type: integer
              description: >-
                Connector average duration in milliseconds of <b>fetch
                accounts</b> step for institution
              format: int64
              x-go-name: RetrieveAccounts
            retrieveMeta:
              type: integer
              description: >-
                Connector average duration in milliseconds of <b>fetch
                metadata</b> step for institution
              format: int64
              x-go-name: RetrieveMeta
            retrieveTransactions:
              type: integer
              description: >-
                Connector average duration in milliseconds of <b>fetch
                transactions</b> step for institution
              format: int64
              x-go-name: RetrieveTransactions
            total:
              type: integer
              description: Total connector average duration in milliseconds
              format: int64
              x-go-name: Total
            verifyCredentials:
              type: integer
              description: >-
                Connector average duration in milliseconds of <b>verifiy
                credentials</b> step for institution
              format: int64
              x-go-name: VerifyCredentials
          description: >-
            AverageDurationMs average connector duration in milliseconds per
            segments.

            When durations are not known for institution this field will be
            `null`.
          x-go-name: AverageDurationMs
      description: >-
        InstitutionPerformanceStats response type for institution performance
        stats
    ConnectorAuthorizationMeta:
      type: object
      properties:
        forgotten_password_url:
          type: string
          description: URL to institution forgotten password page
          example: https://example.com/forgotten-password
          x-go-name: ForgottenPasswordUrl
        login_id_caption:
          type: string
          description: Login ID field caption that should be shown on UI
          example: User name
          x-go-name: LoginIdCaption
        password_caption:
          type: string
          description: Password field caption that should be shown on UI
          example: Password
          x-go-name: PasswordCaption
        secondary_login_id_caption:
          type: string
          description: Secondary loginID caption that should be shown on UI
          example: Secondary login id
          x-go-name: SecondaryLoginIdCaption
        security_code_caption:
          type: string
          description: Security code caption that should be shown on UI
          example: Security code
          x-go-name: SecurityCodeCaption
    ConnectorInstitutionResource:
      required:
        - country
        - logo
        - name
        - shortName
        - tier
        - type
      type: object
      properties:
        country:
          type: string
          description: Institution country name
          example: Australia
          x-go-name: Country
        logo:
          $ref: '#/components/schemas/InstitutionLogoResource'
        name:
          type: string
          description: Institution name
          example: Hooli Bank
          x-go-name: Name
        shortName:
          type: string
          description: Institution short name
          example: Hooli
          x-go-name: ShortName
        tier:
          type: string
          description: |-
            Institution tier identifier
            1 TierOne  TierOne tier identifier for tier1 institution
            2 TierTwo  TierTwo tier identifier for tier2 institution
            3 TierThree  TierThree tier identifier for tier3 institution
            4 TierFour  TierFour tier identifier for tier4 institution
          example: '1'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
          x-go-enum-desc: |-
            1 TierOne  TierOne tier identifier for tier1 institution
            2 TierTwo  TierTwo tier identifier for tier2 institution
            3 TierThree  TierThree tier identifier for tier3 institution
            4 TierFour  TierFour tier identifier for tier4 institution
          x-go-name: Tier
        type:
          type: string
          description: >-
            Institution type identifier

            Bank BankInstitutionType  BankInstitutionType institution type
            identifier for Banks

            Bank (Foreign) BankForeignInstitutionType
            BankForeignInstitutionType institution type identifier for Foreign
            banks

            Test Bank TestBankInstitutionType  TestBankInstitutionType
            institution type identifier for Test banks

            Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType
            institution type identifier for Credit union institutions

            Financial Services FinancialServicesInstitutionType
            FinancialServicesInstitutionType institution type identifier for
            Financial service institutions

            Superannuation SuperannuationInstitutionType
            SuperannuationInstitutionType institution type identifier for
            Superannuation institutions

            Building Society BuildingSociety  BuildingSociety institution type
            identifier for Building Society institutions

            Government Government  Government institution type identifier for
            Government institutions
          example: Bank
          enum:
            - Bank
            - Bank (Foreign)
            - Test Bank
            - Credit Union
            - Financial Services
            - Superannuation
            - Building Society
            - Government
          x-go-enum-desc: >-
            Bank BankInstitutionType  BankInstitutionType institution type
            identifier for Banks

            Bank (Foreign) BankForeignInstitutionType
            BankForeignInstitutionType institution type identifier for Foreign
            banks

            Test Bank TestBankInstitutionType  TestBankInstitutionType
            institution type identifier for Test banks

            Credit Union CreditUnionInstitutionType  CreditUnionInstitutionType
            institution type identifier for Credit union institutions

            Financial Services FinancialServicesInstitutionType
            FinancialServicesInstitutionType institution type identifier for
            Financial service institutions

            Superannuation SuperannuationInstitutionType
            SuperannuationInstitutionType institution type identifier for
            Superannuation institutions

            Building Society BuildingSociety  BuildingSociety institution type
            identifier for Building Society institutions

            Government Government  Government institution type identifier for
            Government institutions
          x-go-name: Type
      description: ConnectorInstitutionResource connector Institution  resource type
    ConnectorsList:
      required:
        - data
        - links
        - totalCount
        - type
      type: object
      properties:
        data:
          type: array
          description: Data contains list of connectors
          items:
            $ref: '#/components/schemas/Connector'
          x-go-name: Connectors
        links:
          $ref: '#/components/schemas/ResourceLinks'
        totalCount:
          type: integer
          description: TotalCount contains total count of connectors
          format: int64
          example: 1
          x-go-name: TotalCount
        type:
          $ref: '#/components/schemas/ResponseFormat'
      description: ConnectorsList contains list of connectors data.
    ResourceLinks:
      required:
        - self
      type: object
      properties:
        self:
          type: string
          description: URL to resource itself
          x-go-name: Self
      description: ResourceLinks contains resource links
    ConnectionsGetResponseResource:
      title: ConnectionsGetResponseResource
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "list".
          example: list
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionsData'
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: Object containing details for connections.
    EventsGetResponseResource:
      title: EventsGetResponseResource
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "list".
          example: list
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventsData'
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: Object containing details for connections.
    ConnectionsRefreshResource:
      title: ConnectionsRefreshResource
      required:
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Type, always "list".
          example: list
        data:
          type: array
          description: Job details data.
          items:
            $ref: '#/components/schemas/ConnectionResponseResource'
      description: Object containing details for connections refresh.
    ForbiddenAccessError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - source
              - type
            type: object
            properties:
              type:
                type: string
                description: Type of the response, always "error"
                example: error
              title:
                type: string
                description: Title of the error
                example: Forbidden Access
              code:
                type: string
                description: Application-specific error code, expressed as a string value.
                example: forbidden-access
                enum:
                  - forbidden-access
                  - no-production-access
                  - access-denied
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: Access to this resource is forbidden.
              source:
                $ref: '#/components/schemas/Source'
    InstitutionLogoResource:
      required:
        - links
        - type
      type: object
      properties:
        colors:
          $ref: '#/components/schemas/Colors'
        links:
          $ref: '#/components/schemas/LogoResourceLinks'
        type:
          type: string
          description: |-
            Resource type identifier.
            image ImageResourceType
          example: image
          enum:
            - image
          x-go-enum-desc: image ImageResourceType
          x-go-name: Type
      description: InstitutionLogoResource linstitution logo resource type
    GetConnectionLinks:
      title: GetConnectionLinks
      required:
        - self
        - user
      type: object
      properties:
        accounts:
          type: string
          description: Accounts reference url.
          example: >-
            https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
        self:
          type: string
          description: Connection self reference url.
          example: >-
            https://au-api.basiq.io/users/cd6fbd92-0b12-43ba-a3c1-286dd5f4f396/connections/29523951
        transactions:
          type: string
          description: Transactions reference url.
          example: >-
            https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
        user:
          type: string
          description: User reference url.
          example: https://au-api.basiq.io/users/cd6fbd92
      description: Object containing links to resources.
    LogoResourceLinks:
      required:
        - full
        - square
      type: object
      properties:
        full:
          type: string
          description: URL to full size logo
          example: https://example.com/AU00000-full.svg
          x-go-name: Full
        square:
          type: string
          description: Square formatted logo URL
          example: https://example.com/AU00000.svg
          x-go-name: Square
      description: LogoResourceLinks contains institution logo resource links
    Colors:
      type: object
      properties:
        primary:
          type: string
          description: Primary primary institution color
          x-go-name: Primary
      description: Colors contains institution colors type
    GetConnectionsLinks:
      title: GetConnectionsLinks
      required:
        - institution
        - self
      type: object
      properties:
        accounts:
          type: string
          description: Accounts reference url.
          example: >-
            https://au-api.basiq.io/users/cd6fbd92/accounts?filter=institution.id.eq('AU00000')
        institution:
          type: string
          description: Institution details.
          example: https://au-api.basiq.io/institutions/AU00000
        self:
          type: string
          description: Connection self reference url.
          example: https://au-api.basiq.io/users/cd6fbd92/connections/29523951
        transactions:
          type: string
          description: Transactions reference url.
          example: >-
            https://au-api.basiq.io/users/cd6fbd92/transactions?filter=institution.id.eq('AU00000')
      description: Object containing links to resources.
    GetUserAccount:
      title: UserGetAccount
      required:
        - count
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        count:
          type: integer
          description: Count of accounts.
          format: int64
          example: 7
        data:
          type: array
          description: Accounts data.
          items:
            $ref: '#/components/schemas/GetUserAccountData'
      description: Container object containing account data.
    GetUserAccountData:
      title: UserGetAccountData
      required:
        - id
        - links
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "account".
          example: account
        id:
          type: string
          description: Account identification.
          example: aaaf2c3b
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: Object containing account data.
    GetUserConnection:
      title: UserGetConnection
      required:
        - count
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        count:
          type: integer
          description: Count of accounts.
          format: int64
          example: 5
        data:
          type: array
          description: Connections data.
          items:
            $ref: '#/components/schemas/GetUserConnectionData'
      description: Container object containing connection data.
    GetUserConnectionData:
      title: GetUserConnectionData
      required:
        - id
        - links
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "connection".
          example: connection
        id:
          type: string
          description: Connection identification.
          example: aaaf2c3b
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: Object containing connection data.
    GetUserLinks:
      title: GetUserLinks
      required:
        - accounts
        - auth_link
        - connections
        - self
        - transactions
      type: object
      properties:
        accounts:
          type: string
          description: Accounts reference url.
          example: https://au-api.basiq.io/users/a3dgf4567a89/accounts
        connections:
          type: string
          description: Connections reference url.
          example: https://au-api.basiq.io/users/a3dgf4567a89/connections
        self:
          type: string
          description: User self reference url.
          example: https://au-api.basiq.io/user/a3dgf4567a89
        transactions:
          type: string
          description: Transactions reference url.
          example: https://au-api.basiq.io/users/a3dgf4567a89/transactions
      description: Object containing links to resources.
    InternalServerError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - type
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code, expressed as a string value.
                example: internal-server-error
                enum:
                  - internal-server-error
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: Internal Server error. Contact support.
              title:
                type: string
                description: Title of the error
                example: Internal Server error.
              type:
                type: string
                description: Type of the response, always "error"
                example: error
    JobData:
      title: JobData
      required:
        - id
        - created
        - steps
        - updated
      type: object
      properties:
        type:
          type: string
          description: Value is "job".
          example: job
        id:
          type: string
          description: A string that uniquely identifies the job.
          example: e9132638
        created:
          type: string
          description: The date time when the job was created.
          example: '2020-06-10T09:59:00Z'
        updated:
          type: string
          description: The date time when the job was last updated.
          example: '2020-06-10T09:59:00Z'
        steps:
          type: array
          description: List of steps that need to be completed.
          items:
            $ref: '#/components/schemas/JobsStep'
          example:
            - title: verify-credentials
              status: success
              result:
                  type: link
                  url: /users/ea3a81/connections/8fce3b
            - title: retrieve-accounts
              status: in-progress
              result: null
            - title: retrieve-transactions
              status: pending
              result: null
        links:
          $ref: '#/components/schemas/JobsLinks'
      description: Container object, containing job details.
    JobsData:
      title: JobsData
      required:
        - created
        - id
        - institution
        - steps
        - updated
      type: object
      properties:
        type:
          type: string
          description: Value is "job".
          example: job
        id:
          type: string
          description: A string that uniquely identifies the job.
          example: e9132638
        created:
          type: string
          description: The date time when the job was created.
          example: '2020-06-10T09:59:00Z'
        updated:
          type: string
          description: The date time when the job was last updated.
          example: '2020-06-10T09:59:00Z'
        institution:
          $ref: '#/components/schemas/JobsInstitution'
        steps:
          type: array
          description: List of steps that need to be completed.
          items:
            $ref: '#/components/schemas/JobsStep'
        links:
          $ref: '#/components/schemas/JobsLinks'
      description: Container object, containing job details.
    JobPostRequest:
      required:
      - mfa-response
      type: object
      properties:
        mfa-response:
          type: array
          description: One time password or answer to a security question/s e.g. ["1234"]
          example:
          - "1234"
          items:
            type: string
    JobsInstitution:
      title: Institution
      required:
        - id
        - links
        - type
      type: object
      properties:
        id:
          type: string
          description: A string that uniquely identifies institution.
          example: AU00000
        links:
          $ref: '#/components/schemas/JobsLinks'
        type:
          type: string
          description: Always "institution".
          example: institution
      description: Institution details.
    JobsLinks:
      title: JobsLinks
      required:
        - self
      type: object
      properties:
        self:
          type: string
          description: URL of the resource
          example: https://au-api.basiq.io/jobs/61723
        source:
          type: string
          description: >-
            Resource that initiated creation of this Job. For example, for
            operations on Connection, this is a Connection URL. This is only
            returned for Connection jobs and not for Statement jobs.
          example: https://au-api.basiq.io/users/ea3a81/connections/8fce3b
      description: Links to the resources.
    JobsResponseResource:
      required:
        - data
        - links
        - size
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of the response, always "list".
          example: list
        data:
          type: array
          description: Container object, containing job details.
          items:
            $ref: '#/components/schemas/JobsData'
        size:
          type: integer
          description: Size of the all the jobs.
          format: int64
          example: 100
        links:
          $ref: '#/components/schemas/ResourceLink'
    JobsResult:
      title: JobsResult
      type: object
      properties:
        code:
          type: string
          description: In case of failed job, displays error code.
          enum:
            - success
            - user-action-required
            - system-unavailable
            - maintenance
            - connector-error
            - institution-not-found
            - institution-not-available
            - institution-disabled
            - missing-required-field
            - missing-required-field-value
            - invalid-field-value
            - invalid-csv-row
            - row-count-exceeded
            - account-data-differs
            - empty-file
            - bank-statement-invalid
            - bank-statement-new-product
            - bank-statement-parsing-error
            - bank-statement-not-supported
            - txn-after-last-updated-date
            - invalid-connection
            - unknown-error
            - job-timed-out
        details:
          type: string
          description: In case of failed job, displays details of the error.
        title:
          type: string
          description: In case of failed job, displays error title.
        type:
          type: string
          description: In case of success, Always "link".
          example: link
        url:
          type: string
          description: In case of success, URL of the updated (or created) resources.
      description: >-
        Result object containing a list of URLs or null. Otherwise if a step
        failed contains an error response.
    JobsStep:
      title: JobsStep
      required:
        - result
        - status
      type: object
      properties:
        title:
          type: string
          description: Name of the step the job needs to complete.
          example: retrieve-accounts
          enum:
            - verify-credentials
            - retrieve-accounts
            - retrieve-transactions
            - retrieve-statements
        status:
          type: string
          description: Status of the job step
          example: success
          enum:
            - pending
            - in-progress
            - success
            - failed
        result:
          $ref: '#/components/schemas/JobsResult'
      description: List of steps that need to be completed.
    NotFoundError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - type
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code, expressed as a string value.
                example: resource-not-found
                enum:
                  - resource-not-found
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: Resource not found.
              title:
                type: string
                description: Title of the error
                example: Requested resource is not found.
              type:
                type: string
                description: Type of the response, always "error"
                example: error
    ResponseFormat:
      type: string
      description: ResponseFormat identifies response data format
    PhysicalAddresses:
      title: PhysicalAddresses
      required:
        - addressLine1
        - addressLine2
        - addressLine3
        - city
        - countryCode
        - formattedAddress
        - postcode
        - state
      type: object
      properties:
        addressLine1:
          type: string
          description: User address.
          example: 13/91 Fisher Rd
        addressLine2:
          type: string
          description: Always "null"
          nullable: true
        addressLine3:
          type: string
          description: Always "null"
          nullable: true
        city:
          type: string
          description: City
          example: Sydney
        country:
          type: string
        countryCode:
          type: string
          description: Country code
          example: AU
        formattedAddress:
          type: string
          description: Address formatted.
          example: 13/91 Fisher Rd, Dee Why NSW 2099, Australia
        postcode:
          type: string
          description: Post code
          example: '2099'
        state:
          type: string
          description: State
          example: NSW
      description: User physical addresses holding the connection.
    ResourceLink:
      title: ResourceLink
      required:
        - self
      type: object
      properties:
        self:
          type: string
          description: URL of the resource.
          example: https://au-api.basiq.io/link/a3dgf4567a89
      description: Link object containing a link to the resource, self reference.
    Source:
      title: Source
      type: object
      properties:
        parameter:
          type: string
          description: String indicating which URI query parameter caused the error.
          example: id
      description: An object containing references to the source of the error.
    StatusServiceUnavailableError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - type
            type: object
            properties:
              code:
                type: object
                description: Application-specific error code, expressed as a string value.
                example: service-unavailable
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: Service Unavailable. Try again later.
              title:
                type: string
                description: Title of the error
                example: Service Unavailable
              type:
                type: string
                description: Type of the response, always "error"
                example: error
    UnauthorizedError:
      required:
        - correlationId
        - data
        - type
      type: object
      properties:
        correlationId:
          type: string
          description: Unique identifier for this particular occurrence of the problem.
          example: ac5ah5i
        data:
          type: array
          description: Error data.
          items:
            required:
              - code
              - type
            type: object
            properties:
              code:
                type: string
                description: Application-specific error code, expressed as a string value.
                example: unauthorized-access
                enum:
                  - unauthorized-access
                  - invalid-authorization-token
              detail:
                type: string
                description: >-
                  Human-readable explanation specific to this occurrence of the
                  problem.
                example: You are not authorized to access this resource
              title:
                type: string
                description: Title of the error
                example: Unauthorized Access
              type:
                type: string
                description: Type of the response, always "error"
                example: error
        type:
          type: string
          description: Always "list".
          example: list
    UserConsentGetResponse:
      title: UserConsentGetResponse
      required:
        - type
        - size
        - data
      type: object
      properties:
        type:
          type: string
          description: Always "list".
          example: list
        size:
          type: integer
          description: Number of items in the list
          format: int64
          example: 1
        data:
          type: array
          items:
            type: object
          description: User consents data.
          example:
            - type: consent
              id: '61acee1d-4508-4a96-ad48-42fa68e5bc19'
              created: '2022-11-01T05:07:00Z'
              updated: '2022-11-01T05:07:00Z'
              expiryDate: '2023-11-01T05:07:00Z'
              status: active
              purpose:
                primary:
                  title: >-
                    Services requiring full ongoing Personal, Account and
                    Transaction details
                  description: >-
                    We need ongoing access to your Personal, Account and
                    Transaction details in order to fully enable our services.
              data:
                retainData: true
                permissions:
                  - scope: customer.person.detail
                    required: true
                    entity: connection
                    information:
                      name: Name, occupation, contact details
                      description: >-
                        This allows access to personally identifiable
                        information. Specifically your name, occupation,
                        address(es) and contact details.
                      attributeList:
                        - Name
                        - Occupation
                        - Phone
                        - Email address
                        - Mail address
                        - Residential address
                    purpose:
                      title: Your Details
                      description: We need to confirm your identity.
                  - scope: account.detail
                    required: true
                    entity: account
                    information:
                      name: Account balance and details
                      description: >-
                        This allows access to detailed information of your
                        accounts. It includes basic account information plus
                        account identifiers and product information. It does not
                        include transaction data.
                      attributeList:
                        - Name of account
                        - Type of account
                        - Account balance
                        - Account number
                        - Interest rates
                        - Fees
                        - Discounts
                        - Account terms
                        - Account mail address
                    purpose:
                      title: Account Details
                      description: We need to capture your account details.
                  - scope: transaction.detail
                    required: true
                    entity: transaction
                    information:
                      name: Transaction details
                      description: >-
                        This allows access to transaction data for your
                        accounts. It includes all account transaction data.
                      attributeList:
                        - Incoming and outgoing transactions
                        - Amounts
                        - Dates
                        - Descriptions of transactions
                        - Who you have sent money to and received money from
                    purpose:
                      title: Transaction details
                      description: >-
                        This allows access to transaction data for your
                        accounts. It includes all account transaction data.
      description: List containing existing user consents.
    UserGetResponse:
      title: UserGetResponse
      required:
        - accounts
        - connections
        - email
        - id
        - links
        - mobile
        - name
        - type
      type: object
      properties:
        type:
          type: string
          description: Always "user".
          example: user
        id:
          type: string
          description: User identification.
          example: ea3a81
        accounts:
          $ref: '#/components/schemas/GetUserAccount'
        connections:
          $ref: '#/components/schemas/GetUserConnection'
        email:
          type: string
          description: User email or empty.
          format: email
          example: gavin@hooli.com
        mobile:
          type: string
          description: User mobile number, or empty.
          example: 61410888666
        name:
          type: string
          description: Name, or empty.
          example: Gavin Belson
        links:
          $ref: '#/components/schemas/GetUserLinks'
      description: User object with details if the creation succeeded.
    UserPostResponse:
      title: UserPostResponse
      required:
        - id
        - links
        - mobile
        - type
      type: object
      properties:
        type:
          type: string
          description: Type of the response, always "user".
          example: user
        id:
          type: string
          description: A string that uniquely identifies the user.
          example: e1956419
        email:
          type: string
          description: The end-users email address.
          format: email
          example: gavin@hooli.com
        mobile:
          type: string
          description: The end-users mobile number.
          example: 61410888999
        firstName:
          type: string
          description: The end-users first name as an optional additional parameter.
          example: Gavin
        lastName:
          type: string
          description: The end-users last name as an optional additional parameter.
          example: Belson
        links:
          $ref: '#/components/schemas/ResourceLink'
      description: User object with details if the creation succeeded.
    createUser:
      type: object
      properties:
        email:
          type: string
          description: The end-users email address. Mandatory if mobile is not supplied.
          example: gavin@hooli.com
        mobile:
          type: string
          description: >-
            The end-users mobile number, supplied in international format.
            +[country-code][mobileno]. Mandatory if email is not supplied.
          example: '+61410888999'
        firstName:
          type: string
          description: The end-users first name as an optional additional parameter.
          example: Gavin
        lastName:
          type: string
          description: The end-users last name as an optional additional parameter.
          example: Belson
    updateUser:
      type: object
      properties:
        email:
          type: string
          description: The end-users email address.
          example: gavin@hooli.com
        mobile:
          type: string
          description: The end-users mobile number.
          example: '+61410888666'
    TokenPostResponse:
      required:
        - access_token
        - expires_in
        - token_type
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
          description: Expires in seconds
          format: int64
          example: 3600
        token_type:
          type: string
          example: Bearer
  securitySchemes:
    services_token:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - services_token: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
  samples-languages:
    - curl
    - node
    - ruby
    - javascript
    - python
